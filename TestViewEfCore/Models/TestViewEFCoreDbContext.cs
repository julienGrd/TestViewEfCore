// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
namespace TestViewEfCore.Models;

public partial class TestViewEFCoreDbContext : DbContext
{
    public TestViewEFCoreDbContext(DbContextOptions<TestViewEFCoreDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Enfants> Enfants { get; set; }

    public virtual DbSet<Inss> Inss { get; set; }

    public virtual DbSet<ViewLastIns> ViewLastIns { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ViewLastIns>(entity =>
        {
            //i don't know exactly how to configure ViewLastIns here, with key or not a key ?

            //entity.HasKey(e => e.NumDos)

            //entity
            //    .HasKey(e => e.NumDos);

            //entity.Metadata.IsKeyless = false;
            entity.HasKey(e => e.NumDos);
            entity.ToView("ViewLastIns");

            entity.Property(e => e.ExceptionDetail)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.FinDate).HasColumnType("smalldatetime");
            entity.Property(e => e.Matricule)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Oid)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.OpDt).HasColumnType("smalldatetime");
            entity.Property(e => e.TsNaisDate)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.TsNaisNom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TsNaisPremPrenom)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.TsNaisPrenoms)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TsSexe)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsNom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.UsPrenoms)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.VilleId).HasColumnName("VilleID");
            entity.Property(e => e.WsRetour)
                .HasMaxLength(2)
            .IsUnicode(false);

            entity.HasOne(e => e.Enf).WithOne(e => e.LastIns).HasForeignKey<ViewLastIns>(e => e.NumDos);
        });

        modelBuilder.Entity<Enfants>(entity =>
        {
            entity.HasKey(e => e.NumDos).HasName("PK_Enfant");

            entity.Property(e => e.NumDos).ValueGeneratedNever();
            entity.Property(e => e.AssureId).HasColumnName("AssureID");
            entity.Property(e => e.CoordId).HasColumnName("CoordID");
            entity.Property(e => e.DateMaj).HasColumnType("datetime");
            entity.Property(e => e.DateNais).HasColumnType("date");
            entity.Property(e => e.DateNaisC).HasColumnType("date");
            entity.Property(e => e.FratrieNb).HasColumnName("Fratrie_Nb");
            entity.Property(e => e.FratrieRang).HasColumnName("Fratrie_Rang");
            entity.Property(e => e.MdphNum)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.NirCertif)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.Nom)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.NumDosPap)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.Prenom)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.RangNais)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ReferentId).HasColumnName("ReferentID");
            entity.Property(e => e.Sexe)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasMany(d => d.InsIndex).WithMany(p => p.NumDos)
                .UsingEntity<Dictionary<string, object>>(
                    "EnfsInss",
                    r => r.HasOne<Inss>().WithMany()
                        .HasForeignKey("InsIndex")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_EnfIns_Ins"),
                    l => l.HasOne<Enfants>().WithMany()
                        .HasForeignKey("NumDos")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_EnfIns_Enfant"),
                    j =>
                    {
                        j.HasKey("NumDos", "InsIndex").HasName("PK_EnfIns");
                        j.ToTable("Enfs_Inss");
                    });

            //this seem not work, 
            entity
                .HasOne(a => a.LastIns)
                .WithOne(e => e.Enf)
                .HasForeignKey<Enfants>(b => b.NumDos);
        });

        modelBuilder.Entity<Inss>(entity =>
        {
            entity.HasKey(e => e.Index).HasName("PK_Ins");

            entity.Property(e => e.ExceptionDetail)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.FinDate).HasColumnType("smalldatetime");
            entity.Property(e => e.Matricule)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Oid)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.OpDt).HasColumnType("smalldatetime");
            entity.Property(e => e.TsNaisDate)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.TsNaisNom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TsNaisPremPrenom)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.TsNaisPrenoms)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TsSexe)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsNom)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.UsPrenoms)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.VilleId).HasColumnName("VilleID");
            entity.Property(e => e.WsRetour)
                .HasMaxLength(2)
                .IsUnicode(false);
        });

        

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}